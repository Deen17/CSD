KCPSM6 Assembler log file for program 'C:\Users\Adil\Documents\CSD\test\picoblaze\program.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 30 Apr 2019
Assembly timestamp: 00:34:39

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 0F5 hex
Nominal program memory size: 1K (1024)   address(9:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 246
Memory locations available: 3850


Assembly listing

 Addr Code                     Instruction

 000                           ;================================================================
 000                           ; Port address definitions...
 000                           ;================================================================
 000                           CONSTANT switches, 00         ; Switch read port
 000                           CONSTANT leds, 01             ; LED write port
 000                           CONSTANT uart_data_rx, 02     ; UART receive read port
 000                           CONSTANT uart_data_tx, 03     ; UART transmit write port
 000                           CONSTANT data_present, 04     ; UART stat read port, lsb
 000                           CONSTANT buffer_full, 05      ; UART stat read port, lsb
 000                           CONSTANT keys, 06             ; KEYPAD input
 000                           ;================================================================
 000                           ; Useful constant declarations...
 000                           ;================================================================
 000                           CONSTANT all_clear, 00        ; define all clear
 000                           CONSTANT all_set, FF          ; define all set
 000                           CONSTANT ascii_NUL, 00        ; ascii code (null character)
 000                           CONSTANT ascii_SOH, 01        ; ascii code (start of header)
 000                           CONSTANT ascii_STX, 02        ; ascii code (start of text)
 000                           CONSTANT ascii_ETX, 03        ; ascii code (end of text)
 000                           CONSTANT ascii_EOT, 04        ; ascii code (end of xmit)
 000                           CONSTANT ascii_ENQ, 05        ; ascii code (enquiry)
 000                           CONSTANT ascii_ACK, 06        ; ascii code (acknowledge)
 000                           CONSTANT ascii_BEL, 07        ; ascii code (bell)
 000                           CONSTANT ascii_BS, 08         ; ascii code (backspace)
 000                           CONSTANT ascii_HT, 09         ; ascii code (horiz tab)
 000                           CONSTANT ascii_LF, 0A         ; ascii code (line feed)                                 END LINE?
 000                           CONSTANT ascii_VT, 0B         ; ascii code (vert tab)
 000                           CONSTANT ascii_FF, 0C         ; ascii code (form feed)
 000                           CONSTANT ascii_CR, 0D         ; ascii code (carriage return)
 000                           CONSTANT ascii_SO, 0E         ; ascii code (shift out)
 000                           CONSTANT ascii_SI, 0F         ; ascii code (shift in)
 000                           CONSTANT ascii_DLE, 10        ; ascii code (data link esc)
 000                           CONSTANT ascii_DC1, 11        ; ascii code (device ctrl 1, xon)
 000                           CONSTANT ascii_DC2, 12        ; ascii code (device ctrl 2)
 000                           CONSTANT ascii_DC3, 13        ; ascii code (device ctrl 3, xoff)
 000                           CONSTANT ascii_DC4, 14        ; ascii code (device ctrl 4)
 000                           CONSTANT ascii_NAK, 15        ; ascii code (negative acknowledge)
 000                           CONSTANT ascii_SYN, 16        ; ascii code (sync idle)
 000                           CONSTANT ascii_ETB, 17        ; ascii code (end xmit block)
 000                           CONSTANT ascii_CAN, 18        ; ascii code (cancel)
 000                           CONSTANT ascii_EM, 19         ; ascii code (end of medium)
 000                           CONSTANT ascii_SUB, 1A        ; ascii code (substitute)
 000                           CONSTANT ascii_ESC, 1B        ; ascii code (escape)
 000                           CONSTANT ascii_FS, 1C         ; ascii code (file separator)
 000                           CONSTANT ascii_GS, 1D         ; ascii code (group separator)
 000                           CONSTANT ascii_RS, 1E         ; ascii code (record separator)
 000                           CONSTANT ascii_US, 1F         ; ascii code (unit space)
 000                           CONSTANT ascii_SPACE, 20      ; ascii code
 000                           CONSTANT ascii_EXCLAIM, 21    ; ascii code
 000                           CONSTANT ascii_DBLQUOT, 22    ; ascii code
 000                           CONSTANT ascii_NUMSIGN, 23    ; ascii code
 000                           CONSTANT ascii_DOLLAR, 24     ; ascii code
 000                           CONSTANT ascii_PERCENT, 25    ; ascii code
 000                           CONSTANT ascii_AMP, 26        ; ascii code
 000                           CONSTANT ascii_SINQUOT, 27    ; ascii code
 000                           CONSTANT ascii_LPAREN, 28     ; ascii code
 000                           CONSTANT ascii_RPAREN, 29     ; ascii code
 000                           CONSTANT ascii_ASTERISK, 2A   ; ascii code
 000                           CONSTANT ascii_PLUS, 2B       ; ascii code
 000                           CONSTANT ascii_COMMA, 2C      ; ascii code
 000                           CONSTANT ascii_MINUS, 2D      ; ascii code
 000                           CONSTANT ascii_PERIOD, 2E     ; ascii code
 000                           CONSTANT ascii_FWDSLASH, 2F   ; ascii code
 000                           CONSTANT ascii_0, 30          ; ascii code
 000                           CONSTANT ascii_1, 31          ; ascii code
 000                           CONSTANT ascii_2, 32          ; ascii code
 000                           CONSTANT ascii_3, 33          ; ascii code
 000                           CONSTANT ascii_4, 34          ; ascii code
 000                           CONSTANT ascii_5, 35          ; ascii code
 000                           CONSTANT ascii_6, 36          ; ascii code
 000                           CONSTANT ascii_7, 37          ; ascii code
 000                           CONSTANT ascii_8, 38          ; ascii code
 000                           CONSTANT ascii_9, 39          ; ascii code
 000                           CONSTANT ascii_COLON, 3A      ; ascii code
 000                           CONSTANT ascii_SEMI, 3B       ; ascii code
 000                           CONSTANT ascii_LESS, 3C       ; ascii code
 000                           CONSTANT ascii_EQUAL, 3D      ; ascii code
 000                           CONSTANT ascii_GREATER, 3E    ; ascii code
 000                           CONSTANT ascii_QUESTION, 3F   ; ascii code
 000                           CONSTANT ascii_CIRCAT, 40     ; ascii code
 000                           CONSTANT ascii_A, 41          ; ascii code
 000                           CONSTANT ascii_B, 42          ; ascii code
 000                           CONSTANT ascii_C, 43          ; ascii code
 000                           CONSTANT ascii_D, 44          ; ascii code
 000                           CONSTANT ascii_E, 45          ; ascii code
 000                           CONSTANT ascii_F, 46          ; ascii code
 000                           CONSTANT ascii_G, 47          ; ascii code
 000                           CONSTANT ascii_H, 48          ; ascii code
 000                           CONSTANT ascii_I, 49          ; ascii code
 000                           CONSTANT ascii_J, 4A          ; ascii code
 000                           CONSTANT ascii_K, 4B          ; ascii code
 000                           CONSTANT ascii_L, 4C          ; ascii code
 000                           CONSTANT ascii_M, 4D          ; ascii code
 000                           CONSTANT ascii_N, 4E          ; ascii code
 000                           CONSTANT ascii_O, 4F          ; ascii code
 000                           CONSTANT ascii_P, 50          ; ascii code
 000                           CONSTANT ascii_Q, 51          ; ascii code
 000                           CONSTANT ascii_R, 52          ; ascii code
 000                           CONSTANT ascii_S, 53          ; ascii code
 000                           CONSTANT ascii_T, 54          ; ascii code
 000                           CONSTANT ascii_U, 55          ; ascii code
 000                           CONSTANT ascii_V, 56          ; ascii code
 000                           CONSTANT ascii_W, 57          ; ascii code
 000                           CONSTANT ascii_X, 58          ; ascii code
 000                           CONSTANT ascii_Y, 59          ; ascii code
 000                           CONSTANT ascii_Z, 5A          ; ascii code
 000                           CONSTANT ascii_LBKT, 5B       ; ascii code
 000                           CONSTANT ascii_BKSLASH, 5C    ; ascii code
 000                           CONSTANT ascii_RBKT, 5D       ; ascii code
 000                           CONSTANT ascii_CARET, 5E      ; ascii code
 000                           CONSTANT ascii_UNDER, 5F      ; ascii code
 000                           CONSTANT ascii_TICK, 60       ; ascii code
 000                           CONSTANT ascii_a, 61          ; ascii code
 000                           CONSTANT ascii_b, 62          ; ascii code
 000                           CONSTANT ascii_c, 63          ; ascii code
 000                           CONSTANT ascii_d, 64          ; ascii code
 000                           CONSTANT ascii_e, 65          ; ascii code
 000                           CONSTANT ascii_f, 66          ; ascii code
 000                           CONSTANT ascii_g, 67          ; ascii code
 000                           CONSTANT ascii_h, 68          ; ascii code
 000                           CONSTANT ascii_i, 69          ; ascii code
 000                           CONSTANT ascii_j, 6A          ; ascii code
 000                           CONSTANT ascii_k, 6B          ; ascii code
 000                           CONSTANT ascii_l, 6C          ; ascii code
 000                           CONSTANT ascii_m, 6D          ; ascii code
 000                           CONSTANT ascii_n, 6E          ; ascii code
 000                           CONSTANT ascii_o, 6F          ; ascii code
 000                           CONSTANT ascii_p, 70          ; ascii code
 000                           CONSTANT ascii_q, 71          ; ascii code
 000                           CONSTANT ascii_r, 72          ; ascii code
 000                           CONSTANT ascii_s, 73          ; ascii code
 000                           CONSTANT ascii_t, 74          ; ascii code
 000                           CONSTANT ascii_u, 75          ; ascii code
 000                           CONSTANT ascii_v, 76          ; ascii code
 000                           CONSTANT ascii_w, 77          ; ascii code
 000                           CONSTANT ascii_x, 78          ; ascii code
 000                           CONSTANT ascii_y, 79          ; ascii code
 000                           CONSTANT ascii_z, 7A          ; ascii code
 000                           CONSTANT ascii_LBRACE, 7B     ; ascii code
 000                           CONSTANT ascii_VBAR, 7C       ; ascii code
 000                           CONSTANT ascii_RBRACE, 7D     ; ascii code
 000                           CONSTANT ascii_TILDE, 7E      ; ascii code
 000                           CONSTANT ascii_DEL, 7F        ; ascii code
 000                           ;================================================================
 000                           ; Actual assembly program goes here...
 000                           ;
 000                           ; NOTE: size limit is 4096 lines of actual assembly code
 000                           ;       Old documentation says it is 1024. This is now incorrect.
 000                           ;================================================================
 000  00000        cold_start: LOAD s0, s0                   ; (nop)
 001  06000                    XOR s0, s0
 002                           ;populates scratchpad with options
 002  01031                    LOAD s0, 31[ascii_1]
 003  2F000                    STORE s0, 00
 004  01029                    LOAD s0, 29[ascii_RPAREN]
 005  2F001                    STORE s0, 01
 006  01020                    LOAD s0, 20[ascii_SPACE]
 007  2F002                    STORE s0, 02
 008  01050                    LOAD s0, 50[ascii_P]
 009  2F003                    STORE s0, 03
 00A  0106C                    LOAD s0, 6C[ascii_l]
 00B  2F004                    STORE s0, 04
 00C  01061                    LOAD s0, 61[ascii_a]
 00D  2F005                    STORE s0, 05
 00E  01079                    LOAD s0, 79[ascii_y]
 00F  2F006                    STORE s0, 06
 010  01020                    LOAD s0, 20[ascii_SPACE]
 011  2F007                    STORE s0, 07
 012  01061                    LOAD s0, 61[ascii_a]
 013  2F008                    STORE s0, 08
 014  01020                    LOAD s0, 20[ascii_SPACE]
 015  2F009                    STORE s0, 09
 016  0104D                    LOAD s0, 4D[ascii_M]
 017  2F00A                    STORE s0, 0A
 018  01065                    LOAD s0, 65[ascii_e]
 019  2F00B                    STORE s0, 0B
 01A  01073                    LOAD s0, 73[ascii_s]
 01B  2F00C                    STORE s0, 0C
 01C  01073                    LOAD s0, 73[ascii_s]
 01D  2F00D                    STORE s0, 0D
 01E  01061                    LOAD s0, 61[ascii_a]
 01F  2F00E                    STORE s0, 0E
 020  01067                    LOAD s0, 67[ascii_g]
 021  2F00F                    STORE s0, 0F
 022  01065                    LOAD s0, 65[ascii_e]
 023  2F010                    STORE s0, 10
 024  0100D                    LOAD s0, 0D[ascii_CR]
 025  2F011                    STORE s0, 11
 026  0100A                    LOAD s0, 0A[ascii_LF]
 027  2F012                    STORE s0, 12
 028  01032                    LOAD s0, 32[ascii_2]
 029  2F013                    STORE s0, 13
 02A  01029                    LOAD s0, 29[ascii_RPAREN]
 02B  2F014                    STORE s0, 14
 02C  01052                    LOAD s0, 52[ascii_R]
 02D  2F015                    STORE s0, 15
 02E  01065                    LOAD s0, 65[ascii_e]
 02F  2F016                    STORE s0, 16
 030  01063                    LOAD s0, 63[ascii_c]
 031  2F017                    STORE s0, 17
 032  0106F                    LOAD s0, 6F[ascii_o]
 033  2F018                    STORE s0, 18
 034  01072                    LOAD s0, 72[ascii_r]
 035  2F019                    STORE s0, 19
 036  01064                    LOAD s0, 64[ascii_d]
 037  2F01A                    STORE s0, 1A
 038  01020                    LOAD s0, 20[ascii_SPACE]
 039  2F01B                    STORE s0, 1B
 03A  01061                    LOAD s0, 61[ascii_a]
 03B  2F01C                    STORE s0, 1C
 03C  0104D                    LOAD s0, 4D[ascii_M]
 03D  2F01D                    STORE s0, 1D
 03E  01065                    LOAD s0, 65[ascii_e]
 03F  2F01E                    STORE s0, 1E
 040  01073                    LOAD s0, 73[ascii_s]
 041  2F01F                    STORE s0, 1F
 042  01073                    LOAD s0, 73[ascii_s]
 043  2F020                    STORE s0, 20
 044  01061                    LOAD s0, 61[ascii_a]
 045  2F021                    STORE s0, 21
 046  01067                    LOAD s0, 67[ascii_g]
 047  2F022                    STORE s0, 22
 048  01065                    LOAD s0, 65[ascii_e]
 049  2F023                    STORE s0, 23
 04A  0100D                    LOAD s0, 0D[ascii_CR]
 04B  2F024                    STORE s0, 24
 04C  0100A                    LOAD s0, 0A[ascii_LF]
 04D  2F025                    STORE s0, 25
 04E  01033                    LOAD s0, 33[ascii_3]
 04F  2F026                    STORE s0, 26
 050  01044                    LOAD s0, 44[ascii_D]
 051  2F027                    STORE s0, 27
 052  01065                    LOAD s0, 65[ascii_e]
 053  2F028                    STORE s0, 28
 054  0106C                    LOAD s0, 6C[ascii_l]
 055  2F029                    STORE s0, 29
 056  01065                    LOAD s0, 65[ascii_e]
 057  2F02A                    STORE s0, 2A
 058  01074                    LOAD s0, 74[ascii_t]
 059  2F02B                    STORE s0, 2B
 05A  01065                    LOAD s0, 65[ascii_e]
 05B  2F02C                    STORE s0, 2C
 05C  01020                    LOAD s0, 20[ascii_SPACE]
 05D  2F02D                    STORE s0, 2D
 05E  01061                    LOAD s0, 61[ascii_a]
 05F  2F02E                    STORE s0, 2E
 060  0104D                    LOAD s0, 4D[ascii_M]
 061  2F02F                    STORE s0, 2F
 062  01065                    LOAD s0, 65[ascii_e]
 063  2F030                    STORE s0, 30
 064  01073                    LOAD s0, 73[ascii_s]
 065  2F031                    STORE s0, 31
 066  01073                    LOAD s0, 73[ascii_s]
 067  2F032                    STORE s0, 32
 068  01061                    LOAD s0, 61[ascii_a]
 069  2F033                    STORE s0, 33
 06A  01067                    LOAD s0, 67[ascii_g]
 06B  2F034                    STORE s0, 34
 06C  01065                    LOAD s0, 65[ascii_e]
 06D  2F035                    STORE s0, 35
 06E  0100D                    LOAD s0, 0D[ascii_CR]
 06F  2F036                    STORE s0, 36
 070  0100A                    LOAD s0, 0A[ascii_LF]
 071  2F037                    STORE s0, 37
 072  01034                    LOAD s0, 34[ascii_4]
 073  2F038                    STORE s0, 38
 074  01020                    LOAD s0, 20[ascii_SPACE]
 075  2F039                    STORE s0, 39
 076  01044                    LOAD s0, 44[ascii_D]
 077  2F03A                    STORE s0, 3A
 078  01065                    LOAD s0, 65[ascii_e]
 079  2F03B                    STORE s0, 3B
 07A  0106C                    LOAD s0, 6C[ascii_l]
 07B  2F03C                    STORE s0, 3C
 07C  01065                    LOAD s0, 65[ascii_e]
 07D  2F03D                    STORE s0, 3D
 07E  01074                    LOAD s0, 74[ascii_t]
 07F  2F03E                    STORE s0, 3E
 080  01065                    LOAD s0, 65[ascii_e]
 081  2F03F                    STORE s0, 3F
 082  01501                    LOAD s5, 01
 083  01440                    LOAD s4, 40
 084  220B9                    JUMP 0B9[main]
 085                     rest: 
 085  01020                    LOAD s0, 20[ascii_SPACE]
 086  2F000                    STORE s0, 00
 087  01061                    LOAD s0, 61[ascii_a]
 088  2F001                    STORE s0, 01
 089  0106C                    LOAD s0, 6C[ascii_l]
 08A  2F002                    STORE s0, 02
 08B  0106C                    LOAD s0, 6C[ascii_l]
 08C  2F003                    STORE s0, 03
 08D  01020                    LOAD s0, 20[ascii_SPACE]
 08E  2F004                    STORE s0, 04
 08F  0104D                    LOAD s0, 4D[ascii_M]
 090  2F005                    STORE s0, 05
 091  01065                    LOAD s0, 65[ascii_e]
 092  2F006                    STORE s0, 06
 093  01073                    LOAD s0, 73[ascii_s]
 094  2F007                    STORE s0, 07
 095  01073                    LOAD s0, 73[ascii_s]
 096  2F008                    STORE s0, 08
 097  01061                    LOAD s0, 61[ascii_a]
 098  2F009                    STORE s0, 09
 099  01067                    LOAD s0, 67[ascii_g]
 09A  2F00A                    STORE s0, 0A
 09B  01065                    LOAD s0, 65[ascii_e]
 09C  2F00B                    STORE s0, 0B
 09D  01073                    LOAD s0, 73[ascii_s]
 09E  2F00C                    STORE s0, 0C
 09F  0100D                    LOAD s0, 0D[ascii_CR]
 0A0  2F00D                    STORE s0, 0D
 0A1  0100A                    LOAD s0, 0A[ascii_LF]
 0A2  2F00E                    STORE s0, 0E
 0A3  01035                    LOAD s0, 35[ascii_5]
 0A4  2F00F                    STORE s0, 0F
 0A5  01029                    LOAD s0, 29[ascii_RPAREN]
 0A6  2F010                    STORE s0, 10
 0A7  01056                    LOAD s0, 56[ascii_V]
 0A8  2F011                    STORE s0, 11
 0A9  0106F                    LOAD s0, 6F[ascii_o]
 0AA  2F012                    STORE s0, 12
 0AB  0106C                    LOAD s0, 6C[ascii_l]
 0AC  2F013                    STORE s0, 13
 0AD  01075                    LOAD s0, 75[ascii_u]
 0AE  2F014                    STORE s0, 14
 0AF  0106D                    LOAD s0, 6D[ascii_m]
 0B0  2F015                    STORE s0, 15
 0B1  01065                    LOAD s0, 65[ascii_e]
 0B2  2F016                    STORE s0, 16
 0B3  0100D                    LOAD s0, 0D[ascii_CR]
 0B4  2F017                    STORE s0, 17
 0B5  0100A                    LOAD s0, 0A[ascii_LF]
 0B6  2F018                    STORE s0, 18
 0B7  01419                    LOAD s4, 19                   ; + 1
 0B8  01500                    LOAD s5, 00
 0B9                     main: 
 0B9  06000                    XOR s0, s0                    ; Index to loop through
 0BA              next_letter: 
 0BA  09305                    INPUT s3, 05[buffer_full]
 0BB  1D301                    COMPARE s3, 01
 0BC  320C3                    JUMP Z, 0C3[buffer_full_call]
 0BD  0A100                    FETCH s1, (s0)
 0BE  11001                    ADD s0, 01
 0BF             ready_buffer: 
 0BF  2D103                    OUTPUT s1, 03[uart_data_tx]
 0C0  1C040                    COMPARE s0, s4                ; s0 > 27
 0C1  360BA                    JUMP NZ, 0BA[next_letter]
 0C2  220C5                    JUMP 0C5[led_echo]
 0C3         buffer_full_call: 
 0C3  00FF0                    LOAD sF, sF
 0C4  220BA                    JUMP 0BA[next_letter]
 0C5                           ; Code 1
 0C5                           ; Write code to output a message to the
 0C5                           ; serial port.  The message must be longer
 0C5                           ; than 25 characters.
 0C5  00000          led_echo: LOAD s0, s0                   ; (nop)
 0C6  09006                    INPUT s0, 06[keys]
 0C7  070FF                    XOR s0, FF
 0C8  2D001                    OUTPUT s0, 01[leds]
 0C9  220CA                    JUMP 0CA[rs232_echo]
 0CA                           ; Code 2
 0CA                           ; Write code to read the switch state and
 0CA                           ; write it, inverted, to the LED output port.
 0CA  00000        rs232_echo: LOAD s0, s0                   ; (nop)
 0CB  06110                    XOR s1, s1
 0CC  06220                    XOR s2, s2
 0CD  09102                    INPUT s1, 02[uart_data_rx]
 0CE  09204                    INPUT s2, 04[data_present]
 0CF  1D201                    COMPARE s2, 01
 0D0  320D4                    JUMP Z, 0D4[send_back]
 0D1  1D501                    COMPARE s5, 01
 0D2  32085                    JUMP Z, 085[rest]
 0D3  220C5                    JUMP 0C5[led_echo]
 0D4  2D103         send_back: OUTPUT s1, 03[uart_data_tx]
 0D5  1D500                    COMPARE s5, 00
 0D6  320D8                    JUMP Z, 0D8[key_input]
 0D7  220C5                    JUMP 0C5[led_echo]
 0D8                           ; Code 3
 0D8                           ; Write code to check if a byte has been
 0D8                           ; received by the uart.  If so, write it
 0D8                           ; back to the uart transmit port.  Then...
 0D8                           ;JUMP     led_echo          ; endless loop
 0D8                key_input: 
 0D8  09006                    INPUT s0, 06[keys]
 0D9  1D00A                    COMPARE s0, 0A
 0DA  320D8                    JUMP Z, 0D8[key_input]
 0DB  01401                    LOAD s4, 01
 0DC  01500                    LOAD s5, 00
 0DD  1D001                    COMPARE s0, 01
 0DE  320E7                    JUMP Z, 0E7[key_1]
 0DF  1D002                    COMPARE s0, 02
 0E0  320EA                    JUMP Z, 0EA[key_2]
 0E1  1D003                    COMPARE s0, 03
 0E2  320ED                    JUMP Z, 0ED[key_3]
 0E3  1D004                    COMPARE s0, 04
 0E4  320F0                    JUMP Z, 0F0[key_4]
 0E5  1D005                    COMPARE s0, 05
 0E6  320F3                    JUMP Z, 0F3[key_5]
 0E7                    key_1: 
 0E7  01031                    LOAD s0, 31[ascii_1]
 0E8  2D003                    OUTPUT s0, 03[uart_data_tx]
 0E9  220B9                    JUMP 0B9[main]
 0EA                    key_2: 
 0EA  01032                    LOAD s0, 32[ascii_2]
 0EB  2D003                    OUTPUT s0, 03[uart_data_tx]
 0EC  220B9                    JUMP 0B9[main]
 0ED                    key_3: 
 0ED  01032                    LOAD s0, 32[ascii_2]
 0EE  2D003                    OUTPUT s0, 03[uart_data_tx]
 0EF  220B9                    JUMP 0B9[main]
 0F0                    key_4: 
 0F0  01033                    LOAD s0, 33[ascii_3]
 0F1  2D003                    OUTPUT s0, 03[uart_data_tx]
 0F2  220B9                    JUMP 0B9[main]
 0F3                    key_5: 
 0F3  01034                    LOAD s0, 34[ascii_4]
 0F4  2D003                    OUTPUT s0, 03[uart_data_tx]
 0F5  220B9                    JUMP 0B9[main]


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

C:\Users\Adil\Documents\CSD\test\picoblaze\program.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   00'd         
 timestamp_minutes 34'd         
 timestamp_seconds 39'd         
 datestamp_year    19'd         
 datestamp_month   4'd          
 datestamp_day     30'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 switches          00           program.psm
 leds              01           program.psm
 uart_data_rx      02           program.psm
 uart_data_tx      03           program.psm
 data_present      04           program.psm
 buffer_full       05           program.psm
 keys              06           program.psm
 all_clear         00           program.psm
 all_set           FF           program.psm
 ascii_NUL         00           program.psm
 ascii_SOH         01           program.psm
 ascii_STX         02           program.psm
 ascii_ETX         03           program.psm
 ascii_EOT         04           program.psm
 ascii_ENQ         05           program.psm
 ascii_ACK         06           program.psm
 ascii_BEL         07           program.psm
 ascii_BS          08           program.psm
 ascii_HT          09           program.psm
 ascii_LF          0A           program.psm
 ascii_VT          0B           program.psm
 ascii_FF          0C           program.psm
 ascii_CR          0D           program.psm
 ascii_SO          0E           program.psm
 ascii_SI          0F           program.psm
 ascii_DLE         10           program.psm
 ascii_DC1         11           program.psm
 ascii_DC2         12           program.psm
 ascii_DC3         13           program.psm
 ascii_DC4         14           program.psm
 ascii_NAK         15           program.psm
 ascii_SYN         16           program.psm
 ascii_ETB         17           program.psm
 ascii_CAN         18           program.psm
 ascii_EM          19           program.psm
 ascii_SUB         1A           program.psm
 ascii_ESC         1B           program.psm
 ascii_FS          1C           program.psm
 ascii_GS          1D           program.psm
 ascii_RS          1E           program.psm
 ascii_US          1F           program.psm
 ascii_SPACE       20           program.psm
 ascii_EXCLAIM     21           program.psm
 ascii_DBLQUOT     22           program.psm
 ascii_NUMSIGN     23           program.psm
 ascii_DOLLAR      24           program.psm
 ascii_PERCENT     25           program.psm
 ascii_AMP         26           program.psm
 ascii_SINQUOT     27           program.psm
 ascii_LPAREN      28           program.psm
 ascii_RPAREN      29           program.psm
 ascii_ASTERISK    2A           program.psm
 ascii_PLUS        2B           program.psm
 ascii_COMMA       2C           program.psm
 ascii_MINUS       2D           program.psm
 ascii_PERIOD      2E           program.psm
 ascii_FWDSLASH    2F           program.psm
 ascii_0           30           program.psm
 ascii_1           31           program.psm
 ascii_2           32           program.psm
 ascii_3           33           program.psm
 ascii_4           34           program.psm
 ascii_5           35           program.psm
 ascii_6           36           program.psm
 ascii_7           37           program.psm
 ascii_8           38           program.psm
 ascii_9           39           program.psm
 ascii_COLON       3A           program.psm
 ascii_SEMI        3B           program.psm
 ascii_LESS        3C           program.psm
 ascii_EQUAL       3D           program.psm
 ascii_GREATER     3E           program.psm
 ascii_QUESTION    3F           program.psm
 ascii_CIRCAT      40           program.psm
 ascii_A           41           program.psm
 ascii_B           42           program.psm
 ascii_C           43           program.psm
 ascii_D           44           program.psm
 ascii_E           45           program.psm
 ascii_F           46           program.psm
 ascii_G           47           program.psm
 ascii_H           48           program.psm
 ascii_I           49           program.psm
 ascii_J           4A           program.psm
 ascii_K           4B           program.psm
 ascii_L           4C           program.psm
 ascii_M           4D           program.psm
 ascii_N           4E           program.psm
 ascii_O           4F           program.psm
 ascii_P           50           program.psm
 ascii_Q           51           program.psm
 ascii_R           52           program.psm
 ascii_S           53           program.psm
 ascii_T           54           program.psm
 ascii_U           55           program.psm
 ascii_V           56           program.psm
 ascii_W           57           program.psm
 ascii_X           58           program.psm
 ascii_Y           59           program.psm
 ascii_Z           5A           program.psm
 ascii_LBKT        5B           program.psm
 ascii_BKSLASH     5C           program.psm
 ascii_RBKT        5D           program.psm
 ascii_CARET       5E           program.psm
 ascii_UNDER       5F           program.psm
 ascii_TICK        60           program.psm
 ascii_a           61           program.psm
 ascii_b           62           program.psm
 ascii_c           63           program.psm
 ascii_d           64           program.psm
 ascii_e           65           program.psm
 ascii_f           66           program.psm
 ascii_g           67           program.psm
 ascii_h           68           program.psm
 ascii_i           69           program.psm
 ascii_j           6A           program.psm
 ascii_k           6B           program.psm
 ascii_l           6C           program.psm
 ascii_m           6D           program.psm
 ascii_n           6E           program.psm
 ascii_o           6F           program.psm
 ascii_p           70           program.psm
 ascii_q           71           program.psm
 ascii_r           72           program.psm
 ascii_s           73           program.psm
 ascii_t           74           program.psm
 ascii_u           75           program.psm
 ascii_v           76           program.psm
 ascii_w           77           program.psm
 ascii_x           78           program.psm
 ascii_y           79           program.psm
 ascii_z           7A           program.psm
 ascii_LBRACE      7B           program.psm
 ascii_VBAR        7C           program.psm
 ascii_RBRACE      7D           program.psm
 ascii_TILDE       7E           program.psm
 ascii_DEL         7F           program.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "30 Apr 2019"  
 timestamp$        "00:34:39"     



List of line labels

   Label              Addr  Source PSM File

 * cold_start         000   program.psm
   rest               085   program.psm
   main               0B9   program.psm
   next_letter        0BA   program.psm
 * ready_buffer       0BF   program.psm
   buffer_full_call   0C3   program.psm
   led_echo           0C5   program.psm
   rs232_echo         0CA   program.psm
   send_back          0D4   program.psm
   key_input          0D8   program.psm
   key_1              0E7   program.psm
   key_2              0EA   program.psm
   key_3              0ED   program.psm
   key_4              0F0   program.psm
   key_5              0F3   program.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD            104
 STAR              -

 AND               -
 OR                -
 XOR               5

 ADD               1
 ADDCY             -
 SUB               -
 SUBCY             -

 TEST              -
 TESTCY            -
 COMPARE          11
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT             5
 OUTPUT            8
 OUTPUTK           -

 STORE             1
 FETCH             1

 DISABLE           -
 ENABLE            -
 RETURNI           -

 JUMP             22
 JUMP@             -
 CALL              -
 CALL@             -
 RETURN            -
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
